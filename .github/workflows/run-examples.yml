name: Run Examples

on: 
  push:
    # TODO switch back
    # branches: [ main, develop ]
    branches: [ deps ]
  pull_request:
    # TODO switch back
    # branches: [ main, develop ]
    branches: [ deps ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v4.1.5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.1.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install scikit-learn>=1.1 --use-pep517
        python -m pip install matplotlib
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      # Shortening runtime significantly
    - name: Replace generations and population size
      run: |
        find examples -type f -name "*.py" -exec sed -E -i 's/max_generation\s*=\s*[0-9]+/max_generation=3/g' {} \;
        find examples -type f -name "*.py" -exec sed -E -i 's/population_size\s*=\s*[0-9]+/population_size=6/g' {} \;

    - name: Find and run Python files in parallel
      run: |
        NUM_PROCS=$(nproc)
        find examples -type f -name "*.py" | parallel --halt now,fail=1 -j $NUM_PROCS 'echo "Running {}"; python {}'
